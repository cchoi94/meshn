{"version":3,"file":"static/webpack/static/development/pages/profile.js.e2681fe0b52a622484b7.hot-update.js","sources":["webpack:///./components/Login.js"],"sourcesContent":["import Link from 'next/link';\nimport Layout from '../components/Layout'\nimport { createSelector } from 'reselect'\nimport { connect } from 'react-redux'\nimport { updateUser, apiRequest } from '../redux/actions/user-actions'\nimport firebaseApp from './Requests/FirebaseConfig'\nimport ReCAPTCHA from 'react-google-recaptcha'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField';\nimport '../styles/login.scss'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      showRecaptcha: false\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name] : e.target.value })\n  }\n\n  login = (e) => {\n    e.preventDefault()\n    firebaseApp.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((response) => {\n      this.props.onUpdateUser({\n        user_email: this.state.email,\n        user_password: this.state.password\n      })\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  signup = (e) => {\n    e.preventDefault();\n    // console.log(process.env.SITE_KEY)\n    // this.setState({showRecaptcha: true})\n    // firebaseApp.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(response => {\n    //   this.props.onUpdateUser({\n    //     user_email: this.state.email,\n    //     user_password: this.state.password\n    //   })\n    // }).catch(error => {\n    //   console.log(error)\n    // })\n  }\n\n  onChange = (value) => {\n    console.log(value)\n  }\n  \n  render() {\n    return (\n      <form className='loginContainer' onSubmit={this.login}>\n        <h1>Login</h1>\n          <div className=\"emailContainer\">\n            <TextField fullWidth onChange={this.handleChange} type=\"email\" name=\"email\" placeholder=\"Enter email\"></TextField>\n          </div>\n          <div className=\"passwordContainer\">\n            <TextField fullWidth onChange={this.handleChange} type=\"password\" name=\"password\" placeholder=\"Enter password\"></TextField>\n          </div>\n          <Button type=\"submit\" variant='contained' fullWidth color=\"primary\" className=\"loginBtn\">Login</Button>\n          {/* <button onClick={this.signup}>Signup</button> */}\n        {/* {this.state.showRecaptcha &&\n          <ReCAPTCHA\n            sitekey={process.env.SITE_KEY}\n            onChange={this.onChange}\n          />\n        } */}\n      </form>\n    );\n  }\n}\n\nconst userSelector = createSelector(\n  state => state.user,\n  user => user\n)\n\nconst mapStateToProps = createSelector(\n  userSelector,\n  (user) => ({\n    user\n  })\n);\n\nconst mapActionsToProps = {\n  onUpdateUser: updateUser,\n  onApiRequest: apiRequest\n}\n\nexport default Layout(connect(mapStateToProps, mapActionsToProps)(Login))"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAUA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAxBA;AA0BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;AAwCA;AACA;AACA;AAxCA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AAmCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;AAhEA;AACA;AAkEA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AADA;AAAA;AAKA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}