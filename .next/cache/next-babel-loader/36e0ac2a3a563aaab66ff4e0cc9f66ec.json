{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport { createSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { updateUser, apiRequest } from '../redux/actions/user-actions';\nimport firebaseApp from './Requests/FirebaseConfig';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"login\", function (e) {\n      e.preventDefault();\n      firebaseApp.auth().signInWithEmailAndPassword(_this.state.email, _this.state.password).then(function (response) {\n        _this.props.onUpdateUser({\n          user_email: _this.state.email,\n          user_password: _this.state.password\n        });\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"signup\", function (e) {\n      e.preventDefault(); // console.log(process.env.SITE_KEY)\n      // this.setState({showRecaptcha: true})\n      // firebaseApp.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(response => {\n      //   this.props.onUpdateUser({\n      //     user_email: this.state.email,\n      //     user_password: this.state.password\n      //   })\n      // }).catch(error => {\n      //   console.log(error)\n      // })\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (value) {\n      console.log(value);\n    });\n\n    _this.state = {\n      email: '',\n      password: '',\n      showRecaptcha: false\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(\"p\", null, \"This is the Login page\"), React.createElement(\"div\", null, React.createElement(\"div\", {\n        className: \"emailContainer\"\n      }, React.createElement(\"label\", null, \"Email Address\"), React.createElement(\"input\", {\n        onChange: this.handleChange,\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Enter email\"\n      })), React.createElement(\"div\", {\n        className: \"passwordContainer\"\n      }, React.createElement(\"label\", null, \"Password\"), React.createElement(\"input\", {\n        onChange: this.handleChange,\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Enter password\"\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.login\n      }, \"Login\"), React.createElement(\"button\", {\n        onClick: this.signup\n      }, \"Signup\")), this.state.showRecaptcha && React.createElement(ReCAPTCHA, {\n        sitekey: process.env.SITE_KEY,\n        onChange: this.onChange\n      }));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nvar userSelector = createSelector(function (state) {\n  return state.user;\n}, function (user) {\n  return user;\n});\nvar mapStateToProps = createSelector(userSelector, function (user) {\n  return {\n    user: user\n  };\n});\nvar mapActionsToProps = {\n  onUpdateUser: updateUser,\n  onApiRequest: apiRequest\n};\nexport default Layout(connect(mapStateToProps, mapActionsToProps)(Login));","map":null,"metadata":{},"sourceType":"module"}