{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Layout from '../components/Layout';\nimport { createSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { bookGym, fetchGymsRequest, submitGymBooking, getBookedTimes } from '../redux/actions/gym-actions.js';\nimport { authListener } from '../redux/actions/user-actions';\nimport Log from '../components/Log';\nimport Login from '../components/Login';\nimport Modal from '../components/Modal';\nimport Router from 'next/router';\n\nvar Book =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Book, _React$Component);\n\n  function Book(props) {\n    var _this;\n\n    _classCallCheck(this, Book);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Book).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"openModal\", function () {\n      _this.setState({\n        isModalOpen: !_this.state.isModalOpen\n      });\n    });\n\n    _this.state = {\n      isModalOpen: false,\n      selectedGym: {}\n    };\n    return _this;\n  }\n\n  _createClass(Book, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.onAuthListener()) {\n        Router.push('/');\n      }\n\n      this.props.onFetchGymsRequest();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: _JSXStyle.dynamic([[\"3951505156\", [this.props.user ? null : 'none']]])\n      }, React.createElement(\"p\", {\n        className: _JSXStyle.dynamic([[\"3951505156\", [this.props.user ? null : 'none']]])\n      }, \"Booking Page\"), this.props.user ? this.props.gyms && this.props.gyms.map(function (gym, index) {\n        return React.createElement(Log, {\n          data: gym,\n          type: \"booking\",\n          key: gym.name,\n          openModal: _this2.openModal,\n          chooseGym: _this2.props.onBookGym,\n          getBookedTimes: _this2.props.onGetBookedTimes\n        });\n      }) : React.createElement(Login, null), this.state.isModalOpen && React.createElement(Modal, {\n        modalState: this.state.isModalOpen,\n        modalAction: this.openModal,\n        data: this.props.gym,\n        user: this.props.user,\n        submitGymBooking: this.props.onSubmitGymBooking,\n        bookedTimes: this.props.bookedTimes,\n        type: \"booking\"\n      }), React.createElement(_JSXStyle, {\n        id: \"3951505156\",\n        dynamic: [this.props.user ? null : 'none']\n      }, [\".bottomNav{display:\".concat(this.props.user ? null : 'none', \";}\")]));\n    }\n  }]);\n\n  return Book;\n}(React.Component);\n\nvar gymSelector = createSelector(function (state) {\n  return state.gyms;\n}, function (gyms) {\n  return gyms;\n});\nvar bookedGymSelector = createSelector(function (state) {\n  return state.gym;\n}, function (gym) {\n  return gym;\n});\nvar userSelector = createSelector(function (state) {\n  return state.user;\n}, function (user) {\n  return user;\n});\nvar bookedTimesSelector = createSelector(function (state) {\n  return state.bookedTimes;\n}, function (bookedTimes) {\n  return bookedTimes;\n});\nvar mapStateToProps = createSelector(gymSelector, bookedGymSelector, userSelector, bookedTimesSelector, function (gyms, gym, user, bookedTimes) {\n  return {\n    gyms: gyms,\n    gym: gym,\n    user: user,\n    bookedTimes: bookedTimes\n  };\n});\nvar mapActionsToProps = {\n  onBookGym: bookGym,\n  onFetchGymsRequest: fetchGymsRequest,\n  onSubmitGymBooking: submitGymBooking,\n  onGetBookedTimes: getBookedTimes,\n  onAuthListener: authListener\n};\nexport default Layout(connect(mapStateToProps, mapActionsToProps)(Book));","map":null,"metadata":{},"sourceType":"module"}